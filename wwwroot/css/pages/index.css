#header #scroller span::after,#header #scroller span::before{content:'';box-sizing:border-box}#credits ul li,#header,#header #scroller span,#header #scroller span::after,ul.cards li{box-sizing:border-box}section .intro{text-align:justify;margin:0 auto}section .intro header{text-align:center}@media screen and (min-width:61.5rem){section .intro{width:42rem}}ul.cards{list-style:none;margin:0;padding:0;display:flex;flex-wrap:wrap;justify-content:space-between}ul.cards li{position:relative;transition:all .15s ease-in-out;display:flex}#consoles figure img,ul.cards figure img{display:block}ul.cards figure{margin:0;text-align:justify;background-color:#fff;font-size:.8275em;box-shadow:0 4px 8px 0 rgba(0,0,0,.2);transition:.3s}#credits,#guides,#mission,#upscalers{background-color:#f8fafc}#consoles li,#credits ul li{position:relative;transition:all .15s ease-in-out}ul.cards figure:hover{box-shadow:0 8px 16px 0 rgba(0,0,0,.2)}ul.cards figure figcaption{padding:1em;font-style:normal}#challenges li,#switches li,#upscalers li{padding-bottom:1.625em}#consoles ul,#credits ul{list-style:none;padding:0;display:flex}ul.cards figure figcaption h3{margin:0 0 .5em;font-weight:600;font-size:1.25em}ul.cards figure figcaption p{margin:0;font-weight:300}#header{min-height:100vh;position:relative}#header .logo{animation-name:header-logo-intro;animation-iteration-count:1;animation-timing-function:ease-out;animation-duration:.6s}#header #scroller{position:absolute;bottom:6em;left:50%;z-index:2}#header #scroller span{position:absolute;top:0;left:50%;width:46px;height:46px;margin-left:-23px}#header #scroller span::after{position:absolute;top:50%;left:50%;width:16px;height:16px;margin:-12px 0 0 -8px;border-left:2px solid #fff;border-bottom:2px solid #fff;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}#challenges .button,#switches .button,#upscalers .button{margin-top:1.625em}#header #scroller span::before{position:absolute;top:0;left:0;z-index:-1;width:46px;height:46px;background-color:rgba(255,255,255,.1);box-shadow:0 0 0 0 rgba(255,255,255,.1);border-radius:100%;opacity:0;animation:header-scroll-indicator 2s infinite}#consoles{padding-bottom:0!important;background-color:#282a2c;color:#fff}#consoles ul{margin:0;flex-wrap:wrap}#consoles li{width:50%;flex-grow:1}@media screen and (min-width:31.5rem){#consoles li{width:33.33333333%}}@media screen and (min-width:41.5rem){#challenges li,#upscalers li{padding:.8125em;width:50%}#switches li{padding:.8125em;width:33.33%}#consoles li{width:25%}}@media screen and (min-width:61.5rem){#consoles li{width:20%}#credits ul{width:42rem}}@media screen and (min-width:81.5rem){#challenges li{width:25%}#consoles li{width:16%}}#consoles li:hover{box-shadow:0 0 40px rgba(0,0,0,.25);z-index:999;transform:scale(1.05)}#consoles figure{margin:0;padding:.75em .75em .25em;text-align:left;color:#fff}#consoles figure figcaption{font-style:normal}#consoles figure figcaption h3{margin:.75em 0 .5em;font-weight:400;font-size:.65em}#credits section{display:flex;flex-wrap:wrap;justify-content:center;padding:1.625em 0}#credits ul{margin:0 auto;flex-wrap:wrap;justify-content:space-between}#credits ul li{display:flex;width:15%;flex:1;text-align:left}#credits ul li img{width:100%;border-radius:50%;box-shadow:0 4px 8px 0 rgba(0,0,0,.2)}#credits ul figure{margin:1em}#credits ul figcaption{display:none}#credits ul li:hover figcaption{display:block;position:absolute;top:-100%;left:0;font-size:.75em;background-color:rgba(0,0,0,.8);color:#fff;padding:1em;box-shadow:0 4px 8px 0 rgba(0,0,0,.2)}#credits ul li:hover figcaption:before{content:" ";position:absolute;bottom:-1em;left:50%;margin-left:-1em;z-index:99;border-style:solid;border-color:rgba(0,0,0,.8) transparent;border-width:1em 1em 0}#credits ul li:hover figcaption h3{margin:0;font-size:1.125em;font-weight:400}#credits ul li:hover figcaption p{margin:0}@keyframes header-logo-intro{0%{opacity:0;transform:translateY(-100%)}100%{opacity:1;transform:translateY(0)}}@keyframes header-scroll-indicator{0%,100%{opacity:0}30%{opacity:1}60%{box-shadow:0 0 0 20px rgba(255,255,255,.1);opacity:0}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
